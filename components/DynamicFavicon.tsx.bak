'use client'

import { useEffect, useRef } from 'react'

const DynamicFavicon = () => {
  const intervalRef = useRef<NodeJS.Timeout | null>(null)
  const currentIndexRef = useRef(0)
  
  useEffect(() => {
    const faviconImages = [
      '/green_logo.png',
      '/Number_13e.png', 
      '/Number_13.png'
    ]
    
    const changeFavicon = () => {
      try {
        // Remove existing favicon
        const existingFavicons = document.querySelectorAll(
          'link[rel="icon"], link[rel="shortcut icon"], link[rel="apple-touch-icon"]'
        )
        existingFavicons.forEach(link => {
          if (link.parentNode) {
            link.parentNode.removeChild(link)
          }
        })
        
        // Create new favicon
        const link = document.createElement('link')
        link.rel = 'icon'
        link.type = 'image/png'
        link.href = faviconImages[currentIndexRef.current] + '?v=' + Date.now()
        
        // Add to head
        document.head.appendChild(link)
        
        // Create apple touch icon
        const appleLink = document.createElement('link')
        appleLink.rel = 'apple-touch-icon'
        appleLink.href = faviconImages[currentIndexRef.current] + '?v=' + Date.now()
        document.head.appendChild(appleLink)
        
        // Move to next image
        currentIndexRef.current = (currentIndexRef.current + 1) % faviconImages.length
        
        console.log(`Favicon changed to: ${faviconImages[currentIndexRef.current === 0 ? faviconImages.length - 1 : currentIndexRef.current - 1]}`)
      } catch (error) {
        console.error('Error changing favicon:', error)
      }
    }
    
    // Change favicon immediately
    changeFavicon()
    
    // Set interval to change favicon every 4 seconds
    intervalRef.current = setInterval(changeFavicon, 4000)
    
    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current)
      }
    }
  }, [])
  
  return null
}

export default DynamicFavicon
